{"version":3,"sources":["services/api.js","redux/teams/teamsOperations.js","redux/teams/teamSlices.js","redux/store.js","components/Container/Container.styled.js","components/Container/Container.jsx","utils/validationSchema.js","components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.jsx","images/Icon.svg","components/Form/Form.styled.js","components/Form/Form.jsx","components/TeamsTable/TeamsTable.styled.js","components/TeamsTable/TeamsTable.jsx","components/PlayersTable/PlayersTable.styled.js","components/PlayerCard/PlayerCard.styled.js","components/PlayerCard/PlayerCard.jsx","components/PlayersTable/PlayersTable.jsx","App.styled.js","App.js","index.js"],"names":["getTeamsList","a","axios","get","data","getPlayersList","defaults","baseURL","fetchTeams","createAsyncThunk","teams","teamsSlice","createSlice","name","initialState","items","error","isLoading","extraReducers","pending","state","_","fulfilled","payload","rejected","action","console","log","message","reducers","addTeam","actions","teamsPersistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","rootReducer","combineReducers","persistReducer","teamsReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ContainerWrap","Container","children","validationSchema","Yup","required","city","matches","abbreviation","transform","value","originalvalue","this","isType","Title","SectionTitle","title","FormWrap","CustomForm","Form","Label","LabelWrap","Input","Field","Select","arrow","Option","Button","ErrorMsg","getStyles","errors","fieldName","getIn","border","dispatch","useDispatch","initialValues","id","conference","onSubmit","values","setSubmitting","resetForm","uuidv4","setFieldValue","autoComplete","htmlFor","type","placeholder","style","component","onChange","e","target","toUpperCase","as","ConfWrap","props","conf","TablePaginationActions","count","page","rowsPerPage","onPageChange","labelPage","theme","useTheme","Box","sx","flexShrink","ml","IconButton","onClick","event","disabled","direction","Math","ceil","useStyles","makeStyles","root","footer","height","pagination","borderBottom","width","borderRadius","display","alignItems","justifyContent","TeamsTable","React","setPage","setRowsPerPage","classes","emptyRows","max","length","TableContainer","Paper","className","overflow","paddingLeft","boxShadow","Table","minWidth","tableLayout","TableHead","TableRow","TableCell","TableBody","slice","map","align","toLowerCase","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","labelRowsPerPage","newPage","onRowsPerPageChange","parseInt","ActionsComponent","labelDisplayedRows","from","displayItems","to","displayPages","CardsWrap","CardLabelWrap","CardLabel","NameWrap","PlayerName","CardWrap","PlayerCard","firstname","lastname","maxWidth","gridTemplateColumns","gridGap","margin","PlayersTable","players","player","first_name","last_name","App","useState","setPlayers","useSelector","useEffect","API","fetchPlayers","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.083e105b.chunk.js","sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = `https://www.balldontlie.io/api/v1`;\n\nexport async function getTeamsList() {\n  const { data } = await axios.get(`/teams`);\n  return data.data;\n}\n\nexport async function getPlayersList() {\n  const { data } = await axios.get(`/players`);\n  return data.data;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { getTeamsList } from '../../services/api';\n\nexport const fetchTeams = createAsyncThunk('teams/getTeamsList', async () => {\n  const teams = await getTeamsList();\n  return teams;\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { fetchTeams } from './teamsOperations';\n\nconst initialState = {\n  items: [],\n  error: null,\n  isLoading: false,\n};\n\nconst teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  extraReducers: {\n    [fetchTeams.pending]: (state, _) => {\n      state.error = null;\n      state.isLoading = true;\n    },\n\n    [fetchTeams.fulfilled]: (state, { payload }) => {\n      state.items = [...state.items, ...payload];\n      state.isLoading = false;\n    },\n\n    [fetchTeams.rejected]: (state, action) => {\n      console.log(action);\n      state.error = action.error.message;\n      state.isLoading = false;\n    },\n  },\n  reducers: {\n    addTeam: (state, { payload }) => {\n      console.log(payload);\n      state.items = [payload, ...state.items];\n    },\n  },\n});\nconst { actions } = teamsSlice;\n\nexport const { addTeam } = actions;\n\nexport default teamsSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport teamsReducer from './teams/teamSlices';\n// import playersReducer from './players/playersSlices';\n\nconst teamsPersistConfig = {\n  key: 'teams',\n  storage,\n};\n// const playersPersistConfig = {\n//   key: 'teams',\n//   storage,\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n];\n\nconst rootReducer = combineReducers({\n  teams: persistReducer(teamsPersistConfig, teamsReducer),\n  // players: persistReducer(playersPersistConfig, playersReducer),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import styled from '@emotion/styled/macro';\n\nexport const ContainerWrap = styled.div`\n  max-width: 1440px;\n  padding: 80px 78px 146px;\n\n  margin: 0 auto;\n`;\n","import {ContainerWrap} from './Container.styled'\n\nfunction Container({ children }) {\n  return <ContainerWrap>{children}</ContainerWrap>;\n}\n\nexport default Container;","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Please enter team name'),\n  city: Yup.string()\n    .required('Please enter the city')\n    .matches(/[a-zA-Z]/, 'Only letters'),\n  abbreviation: Yup.string()\n    .transform(function (value, originalvalue) {\n      return this.isType(value), 'Only uppercase';\n    })\n    .required('Only uppercase'),\n});\n\nexport default validationSchema;\n","import styled from '@emotion/styled/macro';\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1.25;\n  margin-bottom: 24px;\n  color: #14141e;\n`;\n","import { Title } from './SectionTitle.styled';\n\nfunction SectionTitle({ title }) {\n  return <Title>{title}</Title>;\n}\n\nexport default SectionTitle;\n","export default __webpack_public_path__ + \"static/media/Icon.1238bbad.svg\";","import styled from '@emotion/styled/macro';\nimport { Form, Field } from 'formik';\n\nimport arrow from '../../images/Icon.svg';\n\nexport const FormWrap = styled.div`\n  margin-bottom: 24px;\n`;\n\nexport const CustomForm = styled(Form)`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: end;\n  padding: 24px 240px 41px 24px;\n  border: 1px solid #eeeeee;\n  border-radius: 24px;\n  box-shadow: 0px 2px 10px 0px rgba(20, 20, 30, 0.05),\n    0px 1px 4px 0px rgba(20, 20, 30, 0.05);\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n\n  font-size: 12px;\n  line-height: 1.3;\n  color: #757575;\n`;\n\nexport const LabelWrap = styled.span`\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin: 0;\n  padding: 0;\n  padding-left: 16px;\n  width: 194px;\n  height: 48px;\n  margin-right: 24px;\n\n  border: 1px solid #bdbdbd;\n  border-radius: 4px;\n  &::placeholder {\n    font-size: 16px;\n    font-weight: 400;\n\n    line-height: 1.5;\n    color: #9e9e9e;\n  }\n\n  &:placeholder-shown {\n    padding-left: 16px;\n    color: #757575;\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #757575;\n  }\n`;\n\nexport const Select = styled(Field)`\n  display: block;\n  margin: 0;\n  padding: 0;\n  padding-left: 16px;\n  width: 194px;\n  height: 48px;\n  margin-right: 24px;\n\n  border: 1px solid #bdbdbd;\n  border-radius: 4px;\n\n  appearance: none;\n  background: url(${arrow});\n  background-repeat: no-repeat;\n  background-position: center right calc(0.375em + 0.55rem);\n  padding-right: 16px;\n  cursor: pointer;\n\n  &::placeholder {\n    font-size: 16px;\n    font-weight: 400;\n\n    line-height: 1.5;\n    color: #9e9e9e;\n  }\n\n  &:placeholder-shown {\n    padding-left: 16px;\n    color: #757575;\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #757575;\n  }\n`;\n\nexport const SelectWrap = styled.div`\n  overflow: hidden;\n\tborder: 1px solid rgba(0, 0, 0, 0.1);\n\tbox-shadow: 0 0 0 1px rgba(255, 255, 255, 0.25);\n\tpadding-right: 10px;\n\tposition: relative;\n\tz-index: 1;\n\t\n\t&:before {  \n\t\tcontent: '\\25BC';\n    \n\t\tposition: absolute;\n\t\tfont-size: 8px;\n\t\t-webkit-transform: scaleY(.7);\n\t\t-moz-transform: scaleY(.7);\n\t\t-ms-transform: scaleY(.7);\n\t\t-o-transform: scaleY(.7);\n\t\ttransform: scaleY(.7);\n\t\tright: 0;\n\t\ttop: 50%;\n\t\tmargin-top: -4px;\n\t\tbackground: red;\n\t\twidth: 30px;\n\t\ttext-align: center;\n\t\tpointer-events: none;\n\t\tz-index: 2;\n  }\n\t`;\n\nexport const Option = styled.option`\n  padding-left: 16px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  min-width: 194px;\n  height: 48px;\n  background-color: #652ad3;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 12px 36px;\n  color: #ffffff;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5px;\n\n  cursor: pointer;\n\n  margin: 0 auto;\n  transition: all 200ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ErrorMsg = styled.span`\n  position: absolute;\n  bottom: -25%;\n  font-size: 12px;\n  line-height: 1.3;\n  font-weight: 400;\n  color: #f44336;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, getIn } from 'formik';\nimport { v4 as uuidv4 } from 'uuid';\nimport validationSchema from '../../utils/validationSchema';\nimport SectionTitle from '../SectionTitle/SectionTitle';\n\n// import toast from 'react-hot-toast';\nimport { addTeam } from '../../redux/teams/teamSlices';\nimport {\n  FormWrap,\n  CustomForm,\n  Label,\n  LabelWrap,\n  Input,\n  Option,\n  Select,\n  ErrorMsg,\n  Button,\n} from './Form.styled';\n\nfunction getStyles(errors, fieldName) {\n  if (getIn(errors, fieldName)) {\n    return {\n      border: '1px solid red',\n    };\n  }\n}\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  return (\n    <FormWrap>\n      <SectionTitle title={'Teams'}></SectionTitle>\n\n      <Formik\n        initialValues={{\n          id: '',\n          name: '',\n          city: '',\n          abbreviation: '',\n          conference: 'east',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          const { name, city, abbreviation, conference } = values;\n          dispatch(\n            addTeam({ id: uuidv4(), name, city, abbreviation, conference })\n          );\n          console.log(name);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ errors, setFieldValue }) => (\n          <CustomForm autoComplete='off'>\n            <Label htmlFor='name'>\n              <LabelWrap>Name</LabelWrap>\n              <Input\n                type='text'\n                name='name'\n                placeholder='Chandler Bing'\n                style={getStyles(errors, 'name')}\n              />\n              <ErrorMessage name='name' component={ErrorMsg} />\n            </Label>\n            <Label htmlFor='city'>\n              <LabelWrap>City</LabelWrap>\n              <Input\n                type='text'\n                name='city'\n                placeholder='Yemen'\n                style={getStyles(errors, 'city')}\n              />\n              <ErrorMessage name='city' component={ErrorMsg}></ErrorMessage>\n            </Label>\n            <Label htmlFor='abbreviation'>\n              <LabelWrap>Abbreviation</LabelWrap>\n              <Input\n                type='text'\n                name='abbreviation'\n                placeholder='Only uppercase'\n                style={getStyles(errors, 'abbreviation')}\n                onChange={(e) => {\n                  const value = e.target.value || '';\n                  setFieldValue('abbreviation', value.toUpperCase());\n                }}\n              />\n              <ErrorMessage\n                name='abbreviation'\n                component={ErrorMsg}\n              ></ErrorMessage>\n            </Label>\n\n            <Label htmlFor='conference'>\n              <LabelWrap>Conference</LabelWrap>\n              <Select as='select' name='conference'>\n                <Option value='east'>EAST</Option>\n                <Option value='west'>WEST</Option>\n              </Select>\n            </Label>\n            <Button type='submit'>Add team</Button>\n          </CustomForm>\n        )}\n      </Formik>\n    </FormWrap>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled/macro';\n\nexport const ConfWrap = styled.span`\n  display: inline-block;\n  border-radius: 21px;\n  padding: 6px 16px;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.3;\n  text-transform: uppercase;\n\n  color: ${(props) => (props.conf === 'west' ? '#E64A18' : '#1fad87')};\n  background-color: ${(props) =>\n    props.conf === 'west' ? '#FFEAE3' : '#daf5ee'};\n`;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\n\nimport { makeStyles } from '@mui/styles';\n\nimport { ConfWrap } from './TeamsTable.styled';\nimport { red } from '@mui/material/colors';\n\nfunction TablePaginationActions(props) {\n  const { count, page, rowsPerPage, onPageChange, labelPage } = props;\n  const theme = useTheme();\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <div>{labelPage}</div>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n    </Box>\n  );\n}\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiInputBase-root-MuiTablePagination-select': {\n      border: `1px solid red`,\n    },\n  },\n  footer: {\n    '& tr ': {\n      height: '68px',\n    },\n  },\n\n  pagination: {\n    borderBottom: 'none',\n    '& div.MuiInputBase-root': {\n      width: '77px',\n      height: '40px',\n      border: '1px solid #EEEEEE',\n      borderRadius: '4px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    '& p.MuiTablePagination-displayedRows': {\n      width: '900px',\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  },\n}));\n\nfunction TeamsTable({ teams }) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const classes = useStyles();\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - teams.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer\n      component={Paper}\n      className={classes.root}\n      style={{\n        width: '100%',\n        overflow: 'hidden',\n        paddingLeft: '0px',\n        boxShadow: 'none',\n        borderRadius: '6px',\n      }}\n    >\n      <Table\n        sx={{ minWidth: 500 }}\n        aria-label='custom pagination table'\n        style={{ width: '100%', tableLayout: 'auto' }}\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ width: 110 }}>Name</TableCell>\n            <TableCell style={{ width: 131 }}>City</TableCell>\n            <TableCell style={{ width: 134 }}>Abbreviations</TableCell>\n            <TableCell style={{ width: 124 }}>Conference</TableCell>\n            <TableCell style={{ width: '61%' }}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? teams.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : teams\n          ).map(({ name, city, abbreviation, conference, id }) => (\n            <TableRow key={id}>\n              <TableCell style={{ width: 110 }} align='left'>\n                {name}\n              </TableCell>\n\n              <TableCell style={{ width: 131 }}>{city}</TableCell>\n              <TableCell style={{ width: 134 }} align='left'>\n                {abbreviation}\n              </TableCell>\n              <TableCell style={{ width: 124 }} align='left'>\n                <ConfWrap conf={conference.toLowerCase()}>\n                  {conference}\n                </ConfWrap>\n              </TableCell>\n              <TableCell style={{ width: '61%' }} align='left'></TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter className={classes.footer}>\n          <TableRow>\n            <TablePagination\n              className={classes.pagination}\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              labelRowsPerPage={'Items per page'}\n              count={teams.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n              // labelDisplayedRows={(from = page) =>\n              //   `Displaying ${from.from}-${\n              //     from.to === -1 ? from.count / rowsPerPage : from.to\n              //   } of ${from.count} items`\n              // }\n              labelDisplayedRows={(from = page) => {\n                return (\n                  <>\n                    <span className={classes.displayItems}>\n                      {`Displaying ${from.from}-${\n                        from.to === -1 ? from.count / rowsPerPage : from.to\n                      }\n                     of ${from.count} items`}\n                    </span>\n                    <span className={classes.displayPages}>\n                      {`${page + 1} of ${Math.ceil(\n                        from.count / rowsPerPage\n                      )} pages`}\n                    </span>\n                  </>\n                );\n              }}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default TeamsTable;\n","import styled from '@emotion/styled/macro';\n\nexport const CardsWrap = styled.div`\n  margin-top: 80px;\n`;\n\nexport const CardsList = styled.ul`\n  display: grid;\n  max-width: 100vw;\n  grid-template-columns: repeat(auto-fill, minmax(303px, 1fr));\n  grid-gap: 24px;\n  margin-top: 20px;\n  margin: 0 auto;\n  list-style: none;\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const CardLabelWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: #ede6fb;\n`;\n\nexport const CardLabel = styled.span`\n  text-align: center;\n  color: #1d0053;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1.25;\n  text-transform: uppercase;\n`;\n\nexport const NameWrap = styled.div`\n  margin-left: 20px;\n`;\n\nexport const PlayerName = styled.p`\n  max-width: 160px;\n\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.4;\n  color: #14141e;\n  transition: all 300ms linear;\n`;\n\nexport const CardWrap = styled.td`\n  display: flex;\n  align-items: center;\n  width: 303px;\n\n  border-radius: 24px;\n  border: 1px solid #eeeeee;\n  padding: 20px;\n\n  cursor: pointer;\n\n  box-shadow: 0px 2px 10px 0px rgba(20, 20, 30, 0.05),\n    0px 1px 4px 0px rgba(20, 20, 30, 0.05);\n\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 6px 15px 0px rgba(20, 20, 30, 0.05),\n      0px 3px 18px 0px rgba(20, 20, 30, 0.05);\n\n    ${PlayerName} {\n      color: #652ad3;\n    }\n  }\n`;\n","import {\n  CardWrap,\n  CardLabelWrap,\n  CardLabel,\n  NameWrap,\n  PlayerName,\n} from './PlayerCard.styled';\n\nfunction PlayerCard({ firstname, lastname }) {\n  const label = `${firstname[0].toUpperCase()}${lastname[0].toUpperCase()}`;\n\n  return (\n    <CardWrap>\n      <CardLabelWrap>\n        <CardLabel>{label}</CardLabel>\n      </CardLabelWrap>\n      <NameWrap>\n        <PlayerName>{firstname} </PlayerName>\n        <PlayerName> {lastname}</PlayerName>\n      </NameWrap>\n    </CardWrap>\n  );\n}\n\nexport default PlayerCard;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\n\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport { makeStyles } from '@mui/styles';\nimport TablePagination from '@mui/material/TablePagination';\nimport SectionTitle from '../SectionTitle/SectionTitle';\n\nimport { CardsWrap } from './PlayersTable.styled';\nimport PlayerCard from '../PlayerCard/PlayerCard';\n\nfunction TablePaginationActions(props) {\n  const { count, page, rowsPerPage, onPageChange, labelPage } = props;\n  const theme = useTheme();\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <div>{labelPage}</div>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n    </Box>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiInputBase-root-MuiTablePagination-select': {\n      border: `1px solid red`,\n    },\n\n    '& tbody.MuiTableBody-root': {\n      display: 'grid',\n      maxWidth: '100vw',\n      gridTemplateColumns: 'repeat(auto-fill, minmax(303px, 1fr))',\n      gridGap: '24px',\n      margin: '0 auto',\n    },\n  },\n\n  footer: {\n    '& tr ': {\n      height: '68px',\n    },\n  },\n\n  pagination: {\n    borderBottom: 'none',\n    '& div.MuiInputBase-root': {\n      width: '77px',\n      height: '40px',\n      border: '1px solid #EEEEEE',\n      borderRadius: '4px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    '& p.MuiTablePagination-displayedRows': {\n      width: '900px',\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  },\n}));\n\nexport default function PlayersTable({ players }) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n\n  const classes = useStyles();\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - players.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <CardsWrap>\n      <SectionTitle title='Players' />\n      <TableContainer\n        component={Paper}\n        className={classes.root}\n        style={{\n          width: '100%',\n          overflow: 'hidden',\n          paddingLeft: '0px',\n          boxShadow: 'none',\n          borderRadius: '6px',\n        }}\n      >\n        <Table\n          sx={{ minWidth: 500 }}\n          aria-label='custom pagination table'\n          style={{ width: '100%', tableLayout: 'auto' }}\n        >\n          <TableBody>\n            {(rowsPerPage > 0\n              ? players.slice(\n                  page * rowsPerPage,\n                  page * rowsPerPage + rowsPerPage\n                )\n              : players\n            ).map((player) => (\n              <TableRow key={player.id}>\n                <PlayerCard\n                  key={player.id}\n                  firstname={player.first_name}\n                  lastname={player.last_name}\n                  id={player.id}\n                ></PlayerCard>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter className={classes.footer}>\n            <TableRow>\n              <TablePagination\n                className={classes.pagination}\n                rowsPerPageOptions={[8, 16, 32, { label: 'All', value: -1 }]}\n                labelRowsPerPage={'Items per page'}\n                count={players.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n                labelDisplayedRows={(from = page) => {\n                  return (\n                    <>\n                      <span className={classes.displayItems}>\n                        {`Displaying ${from.from}-${\n                          from.to === -1 ? from.count / rowsPerPage : from.to\n                        }\n                     of ${from.count} items`}\n                      </span>\n                      <span className={classes.displayPages}>\n                        {`${page + 1} of ${Math.ceil(\n                          from.count / rowsPerPage\n                        )} pages`}\n                      </span>\n                    </>\n                  );\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </CardsWrap>\n  );\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Title = styled.h1`\n  font-weight: 700;\n  font-size: 72px;\n  line-height: 1.22;\n  color: #14141e;\n  margin-bottom: 40px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Container from './components/Container/Container';\nimport Form from './components/Form/Form';\nimport TeamsTable from './components/TeamsTable/TeamsTable';\nimport PlayersTable from './components/PlayersTable/PlayersTable';\nimport { Title } from './App.styled';\nimport * as API from './services/api';\nimport { fetchTeams } from './redux/teams/teamsOperations';\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const teams = useSelector((state) => state.teams.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function fetchPlayers() {\n      const players = await API.getPlayersList();\n      setPlayers((state) => [...state, ...players]);\n    }\n    fetchPlayers();\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchTeams());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>NBA profile</Title>\n      <Form></Form>\n      {teams.length > 0 && <TeamsTable teams={teams}></TeamsTable>}\n      {players.length > 0 && <PlayersTable players={players}></PlayersTable>}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}